/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuiModuloPersonal;


import ClasesTablas.Empleado;
import ClasesTablas.TurnosSemanales;
import ControladorClasesTablas.EmpleadoJpaController;
import ControladorClasesTablas.TurnosSemanalesJpaController;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.IOException;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;


/**
 *
 * 
 */
public class PanelRegistrarEmpleado extends javax.swing.JPanel {
    
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("LCPU");
    Empleado empleado = null;
    String ruta = ""; 
    
    public PanelRegistrarEmpleado() {
        initComponents();
        jbAgregar.addActionListener(new agregar());
        jbBorrar.addActionListener(new quitar());
        //jbCrear.addActionListener(new actualizar());
        jlCrearEmpleado.addMouseListener(new actualizar());
        JScrollPane jScrollPane = new JScrollPane(this);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel17 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jlFoto = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jbCargarFoto = new javax.swing.JButton();
        txtnombre = new javax.swing.JTextField();
        txtapellidos = new javax.swing.JTextField();
        cb_tipodocumento = new javax.swing.JComboBox();
        txtnoidentidad = new javax.swing.JTextField();
        cb_cargo = new javax.swing.JComboBox();
        txttel = new javax.swing.JTextField();
        txtcelular = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtusuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cb_dia = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jbBorrar = new javax.swing.JButton();
        jbAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablemodel = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtcontrasena = new javax.swing.JPasswordField();
        spinner_hora_inicio = new javax.swing.JSpinner();
        spinner_hora_fin = new javax.swing.JSpinner();
        jlCrearEmpleado = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setAutoscrolls(true);
        setOpaque(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Foto:");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Nombre:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Apellidos:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Tipo de Documento:");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("No. Identificacion:");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Dirrecciòn:");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, -1, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Cargo:");
        add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Tel:");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, -1, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Celular:");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 570, -1, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Contraseña:");
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 650, -1, -1));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Email:");
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, -1, -1));

        jlFoto.setText("               Foto");
        jlFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        add(jlFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 111, 110));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Empleado");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        jbCargarFoto.setText("Cargar foto");
        jbCargarFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbCargarFotoMouseClicked(evt);
            }
        });
        add(jbCargarFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, -1, -1));
        add(txtnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 280, 30));
        add(txtapellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 280, 30));

        cb_tipodocumento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cedula", "Cedula Extranjera", "Tarjeta de Identidad" }));
        add(cb_tipodocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 290, 280, 30));
        add(txtnoidentidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 280, 30));

        cb_cargo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gerente", "Cajero", "Mesero" }));
        add(cb_cargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, 280, 33));
        add(txttel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 520, 280, 32));
        add(txtcelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 560, 280, 32));
        add(txtdireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, 280, 32));
        add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, 280, 32));
        add(txtusuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 600, 280, 32));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Turnos");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Seleccione un dia:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, -1, -1));

        cb_dia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo" }));
        add(cb_dia, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 90, 219, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Hora Inicio:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 190, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Hora Fin:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 288, -1, -1));

        jbBorrar.setText("Borrar");
        add(jbBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 370, -1, -1));

        jbAgregar.setText("Agregar");
        add(jbAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 370, -1, -1));

        tablemodel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Dia", "Hora Inicio", "Hora Fin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablemodel);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 410, 482, 220));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Usuario");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 610, -1, -1));
        add(txtcontrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 640, 280, 33));

        spinner_hora_inicio.setModel(new javax.swing.SpinnerDateModel());
        spinner_hora_inicio.setEditor(new javax.swing.JSpinner.DateEditor(spinner_hora_inicio, "HH:mm"));
        add(spinner_hora_inicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 190, 90, 30));

        spinner_hora_fin.setModel(new javax.swing.SpinnerDateModel());
        spinner_hora_fin.setEditor(new javax.swing.JSpinner.DateEditor(spinner_hora_fin, "HH:mm"));
        add(spinner_hora_fin, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 280, 90, 30));

        jlCrearEmpleado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/botonCrear.png"))); // NOI18N
        add(jlCrearEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 640, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jbCargarFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbCargarFotoMouseClicked
        
        JFileChooser myFileChooser = new JFileChooser();
        myFileChooser.showOpenDialog(this);

        ruta = myFileChooser.getSelectedFile().getAbsolutePath();
        //if(!(ruta.equalsIgnoreCase(""))) {
        if(!(ruta == null)) {
            ImageIcon fotografia = new ImageIcon(ruta);
            jlFoto.setIcon(fotografia);
            //ruta = ruta.replace("\\", "/");
            //ruta = ruta.substring(67,ruta.length());
        } else {
            ruta = null;
        }
    }//GEN-LAST:event_jbCargarFotoMouseClicked
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cb_cargo;
    private javax.swing.JComboBox cb_dia;
    private javax.swing.JComboBox cb_tipodocumento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbCargarFoto;
    private javax.swing.JLabel jlCrearEmpleado;
    private javax.swing.JLabel jlFoto;
    private javax.swing.JSpinner spinner_hora_fin;
    private javax.swing.JSpinner spinner_hora_inicio;
    public javax.swing.JTable tablemodel;
    private javax.swing.JTextField txtapellidos;
    private javax.swing.JTextField txtcelular;
    private javax.swing.JPasswordField txtcontrasena;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtemail;
    public javax.swing.JTextField txtnoidentidad;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txttel;
    private javax.swing.JTextField txtusuario;
    // End of variables declaration//GEN-END:variables

    
    
    private class agregar implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            
            EmpleadoJpaController ejc = new EmpleadoJpaController(emf);
            TurnosSemanalesJpaController tsc = new TurnosSemanalesJpaController(emf);
            TurnosSemanales turno = new TurnosSemanales(); 
           
            if(!txtnombre.getText().trim().equals("") && !txtapellidos.getText().trim().equals("") && !txtnoidentidad.getText().trim().equals("") 
              && !txtemail.getText().trim().equals("") && !txtdireccion.getText().trim().equals("") && !txttel.getText().trim().equals("")
              && !txtcelular.getText().trim().equals("") && !txtusuario.getText().trim().equals("") && !txtcontrasena.getText().trim().equals("")){
               
                try {
                   
                    if(empleado == null)
                    {
                        
                        empleado = new Empleado(Integer.parseInt(txtnoidentidad.getText()),txtnombre.getText(),txtapellidos.getText(),
                            cb_cargo.getSelectedItem().toString(),txttel.getText(),txtcelular.getText(),txtemail.getText(),
                            txtdireccion.getText(),cb_tipodocumento.getSelectedItem().toString(), txtusuario.getText(), txtcontrasena.getText(),"Activo",ruta
                            );
                            ejc.create(empleado);

                    }
                    
                    turno = new TurnosSemanales(getNumListaTurno(),cb_dia.getSelectedItem().toString(),getSpinner_Hora_Inicio(),getSpinner_Hora_Fin(),empleado);
                    tsc.create(turno);
                    empleado.getTurnosSemanalesSet().add(turno);
                    
                    tablemodel.setModel(new tabelModelHorario());
                    
                    
                } catch (Exception ex) {
                    Logger.getLogger(PanelRegistrarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                 JOptionPane.showMessageDialog(null,"Por favor, complete los campos requeridos");
            }
            
        } 
    }
    
    private class quitar implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            
            EmpleadoJpaController ejc = new EmpleadoJpaController(emf);
            TurnosSemanalesJpaController tsc = new TurnosSemanalesJpaController(emf);
            TurnosSemanales turno = null; 
            Set<TurnosSemanales> turnosemanalesset = empleado.getTurnosSemanalesSet();
            List<TurnosSemanales> listaturnos = new LinkedList<>(turnosemanalesset);
           
            if(!txtnombre.getText().trim().equals("") && !txtapellidos.getText().trim().equals("") && !txtnoidentidad.getText().trim().equals("") 
              && !txtemail.getText().trim().equals("") && !txtdireccion.getText().trim().equals("") && !txttel.getText().trim().equals("")
              && !txtcelular.getText().trim().equals("") && !txtusuario.getText().trim().equals("") && !txtcontrasena.getText().trim().equals("")){
               
                try {
                    
                    if (tablemodel.getSelectedRow() != -1) {
                        turno = listaturnos.get(tablemodel.getSelectedRow());
                        tsc.destroy(turno.getId());
                        //ejc.create(empleado);
                        
                        tablemodel.setModel(new tabelModelHorario());
                    }else{
                        JOptionPane.showMessageDialog(null,"Por favor, seleccione un turno antes de quitar de la lista");
                    }
                    
                } catch (Exception ex) {
                    Logger.getLogger(PanelRegistrarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                 JOptionPane.showMessageDialog(null,"Por favor, complete los campos requeridos");
            }
            
        } 
    }
    
    private class actualizar implements MouseListener{

        @Override
        public void mouseClicked(MouseEvent me) {
            EmpleadoJpaController ejc = new EmpleadoJpaController(emf);
           
            if(!txtnombre.getText().trim().equals("") && !txtapellidos.getText().trim().equals("") && !txtnoidentidad.getText().trim().equals("") 
              && !txtemail.getText().trim().equals("") && !txtdireccion.getText().trim().equals("") && !txttel.getText().trim().equals("")
              && !txtcelular.getText().trim().equals("") && !txtusuario.getText().trim().equals("") && !txtcontrasena.getText().trim().equals("")){
               
                try {
                    //Integer idEmpleado, String nombres, String apellidos, String cargo,
                    //String telFijo, String telCel, String email, String direccion,
                    //String tipoDocumento,String usuario, String contrase, String estado
                    
                    Empleado empleado1 = ejc.findEmpleado(empleado.getIdEmpleado());
                    
                    if(empleado1!=null){

                        empleado.setIdEmpleado(Integer.parseInt(txtnoidentidad.getText()));
                        empleado.setNombres(txtnombre.getText());
                        empleado.setApellidos(txtapellidos.getText());
                        empleado.setCargo(cb_cargo.getSelectedItem().toString());
                        empleado.setTelFijo(txttel.getText());
                        empleado.setTelCel(txtcelular.getText());
                        empleado.setEmail(txtemail.getText());
                        empleado.setDireccion(txtdireccion.getText());
                        empleado.setTipoDocumento(cb_tipodocumento.getSelectedItem().toString());
                        empleado.setUsuario(txtusuario.getText());
                        empleado.setContrase(txtcontrasena.getText());
                        empleado.setEstado("Activo");
                        empleado.setArchivo(ruta);

                        ejc.edit(empleado);
                        
                        JOptionPane.showMessageDialog(null,"El empleado ha sido creado");
                        limpiarCampos();
                    }else{
                        
                        empleado.setIdEmpleado(Integer.parseInt(txtnoidentidad.getText()));
                        empleado.setNombres(txtnombre.getText());
                        empleado.setApellidos(txtapellidos.getText());
                        empleado.setCargo(cb_cargo.getSelectedItem().toString());
                        empleado.setTelFijo(txttel.getText());
                        empleado.setTelCel(txtcelular.getText());
                        empleado.setEmail(txtemail.getText());
                        empleado.setDireccion(txtdireccion.getText());
                        empleado.setTipoDocumento(cb_tipodocumento.getSelectedItem().toString());
                        empleado.setUsuario(txtusuario.getText());
                        empleado.setContrase(txtcontrasena.getText());
                        empleado.setEstado("Activo");
                        empleado.setArchivo(ruta);

                        ejc.create(empleado);

                        JOptionPane.showMessageDialog(null,"El empleado ha sido creado");
                        limpiarCampos();
                    }
                    
                } catch (Exception ex) {
                    Logger.getLogger(PanelRegistrarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                 JOptionPane.showMessageDialog(null,"Por favor, complete los campos requeridos");
            }
        }

        @Override
        public void mousePressed(MouseEvent me) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void mouseReleased(MouseEvent me) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void mouseEntered(MouseEvent me) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void mouseExited(MouseEvent me) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }
    
    private int getIdTurno(){
        int a = 0;
        
        TurnosSemanalesJpaController tsc = new TurnosSemanalesJpaController(emf);
        List<TurnosSemanales> listaturnos = tsc.findTurnosSemanalesEntities();
        a = listaturnos.get(listaturnos.size()).getId();
        return a;
    }
    
    private LinkedList<TurnosSemanales> getListaTurno(){
        
        LinkedList<TurnosSemanales> listaturno = new LinkedList<TurnosSemanales>();
        TurnosSemanalesJpaController tsj = new TurnosSemanalesJpaController(emf);
        List<TurnosSemanales> listaturnos = tsj.findTurnosSemanalesEntities();
       
        
        for (TurnosSemanales listaturno1 : listaturnos) {
            
            if(listaturno1.getIdEmpleado().getIdEmpleado() == empleado.getIdEmpleado()){
                listaturno.add(listaturno1);
            } 
        }
        return listaturno;
    }
    
    private int getNumListaTurno(){
        int a = 0;
        TurnosSemanalesJpaController tsj = new TurnosSemanalesJpaController(emf);
        List<TurnosSemanales> listaturnos = tsj.findTurnosSemanalesEntities();
        a = listaturnos.get(listaturnos.size()-1).getId();
        return a+1;
    }
    
    private String getSpinner_Hora_Inicio(){
        
        JSpinner.DateEditor de = new JSpinner.DateEditor(spinner_hora_inicio, "HH:mm");
        return de.getFormat().format(spinner_hora_inicio.getValue());
    }
    
    private String getSpinner_Hora_Fin(){
        
        JSpinner.DateEditor def = new JSpinner.DateEditor(spinner_hora_fin, "HH:mm");
        return def.getFormat().format(spinner_hora_fin.getValue());
    }

    
     private class tabelModelHorario extends AbstractTableModel{
        
        //EmpleadoJpaController ejc = new EmpleadoJpaController(emf);
        //List<Empleado> listaempleado = ejc.findEmpleadoEntities();
        //Set<TurnosSemanales> turnosemanalesset = empleado.getTurnosSemanalesSet();
         
        List<TurnosSemanales> listaturnos = getListaTurno();
        
        @Override
        public int getRowCount() {
            if(listaturnos.isEmpty()){
                return 0;
            }else{
                return listaturnos.size();
            }
        }

        @Override
        public int getColumnCount() {
            return 3;
        }

        @Override
        public String getColumnName(int column) {
            switch(column){
                case 0: return "Dia"; 
                case 1: return "Hora Inicio";
                case 2: return "Hora Fin"; 
            }
            return "";
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            
            TurnosSemanales turnos = listaturnos.get(rowIndex);
            
            switch(columnIndex){
                case 0: return turnos.getDia(); 
                case 1: return turnos.getHoraInicio();
                case 2: return turnos.getHoraFin(); 
            }
            return "";
        }
    }
    
    public void limpiarCampos(){
        txtnombre.setText("");      txtapellidos.setText("");
        txtnoidentidad.setText(""); txtemail.setText("");
        txtdireccion.setText("");   txttel.setText("");
        txtcelular.setText("");     txtusuario.setText("");
        txtcontrasena.setText("");
    }
}
