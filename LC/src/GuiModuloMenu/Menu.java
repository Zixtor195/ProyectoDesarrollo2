/*
    Universidad del Valle
    Asignatura: Desarrollo de Software II 750092M
    Tema: Proyecto final - Entrega 3
    Archivo: Menu.java
    Version: 1.0
    Fecha de creacion: 28 abril 2017
    Autores:   
                Monica Marcela Llano
                Sebastian Balante Salazar
                Cristian Camilo Jurado Arboleda
                Juan Felipe Orozco Escobar
    
    Responsabilidad: Interfaz Personal Restaurante Lenos y Carbon
       
    Colaboracion: PanelConsultarItem, PanelEliminarItem, PanelModificarItem, PanelRegistrarItem
                    PanelRealizarModificacionItem, PanelResultadosConsultaItem
*/

package GuiModuloMenu;

import ClasesTablas.Item;
import ControladorClasesTablas.ItemJpaController;
import java.util.LinkedList;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.table.DefaultTableModel;


public class Menu extends javax.swing.JFrame {

    EntityManagerFactory emf = Persistence.createEntityManagerFactory("LCPU");
    
    public Menu() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        //setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlRegistrarItem = new javax.swing.JLabel();
        jlModificarItem = new javax.swing.JLabel();
        jlConsultarItem = new javax.swing.JLabel();
        jlEliminarItem = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(java.awt.Color.black);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlRegistrarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/crearItem.jpg"))); // NOI18N
        jlRegistrarItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlRegistrarItemMouseClicked(evt);
            }
        });

        jlModificarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modificarItem.jpg"))); // NOI18N
        jlModificarItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlModificarItemMouseClicked(evt);
            }
        });

        jlConsultarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/consultarItem.jpg"))); // NOI18N
        jlConsultarItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlConsultarItemMouseClicked(evt);
            }
        });

        jlEliminarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminarItem.jpg"))); // NOI18N
        jlEliminarItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlEliminarItemMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlConsultarItem)
                    .addComponent(jlEliminarItem)
                    .addComponent(jlModificarItem)
                    .addComponent(jlRegistrarItem))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jlRegistrarItem)
                .addGap(24, 24, 24)
                .addComponent(jlModificarItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlConsultarItem)
                .addGap(27, 27, 27)
                .addComponent(jlEliminarItem)
                .addGap(60, 60, 60))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 781, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 682, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jlRegistrarItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlRegistrarItemMouseClicked

        PanelRegistrarItem ri = new PanelRegistrarItem();
        ri.setSize(752,686);
        
        jPanel2.removeAll();
        jPanel2.add(ri);
        jPanel2.revalidate();
        jPanel2.repaint();
    }//GEN-LAST:event_jlRegistrarItemMouseClicked

    private void jlModificarItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlModificarItemMouseClicked
        
        PanelModificarItem mi = new PanelModificarItem();
        mi.setSize(752,686);
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("LCPU");
        ItemJpaController dao = new ItemJpaController(emf);
        
        List<Item> items = listaItems();
        
        
        Object listaItems[][]  = new Object[items.size()][5];
        for (int i = 0; i < items.size(); i++) {
            
            if(dao.findItemEntities().get(i).getEstado().equalsIgnoreCase("Inactivo"))
            {
                  dao.findItemEntities().remove(i);
            
            }
            else
            {    
            listaItems[i][0] = dao.findItemEntities().get(i).getIdItem();
            listaItems[i][1] = dao.findItemEntities().get(i).getNombre();
            listaItems[i][2] = dao.findItemEntities().get(i).getPrecio();
            listaItems[i][4] = dao.findItemEntities().get(i).getCategoria();
            listaItems[i][3] = dao.findItemEntities().get(i).getDescripcion();
            }
        }
        String columna[] = new String[] {"ID", "Nombre", "Precio", "Categoria", "Descripcion"};
        emf.close();
        
        DefaultTableModel modelo = new DefaultTableModel(listaItems, columna);
        
        mi.jtTablaModificarItem.setModel(modelo);
        
        jPanel2.removeAll();
        jPanel2.add(mi);
        jPanel2.revalidate();
        jPanel2.repaint();
    }//GEN-LAST:event_jlModificarItemMouseClicked

    private void jlConsultarItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlConsultarItemMouseClicked
        
        PanelConsultarItem ci = new PanelConsultarItem();
        ci.setSize(752,686);
        
//        EntityManagerFactory emf = Persistence.createEntityManagerFactory("LCPU");
//        ItemJpaController dao = new ItemJpaController(emf);
//        
//    
//        Object listaItems[][]  = new Object[dao.findItemEntities().size()][5];
//        for (int i = 0; i < dao.findItemEntities().size(); i++) {
//            
//            if(dao.findItemEntities().get(i).getEstado().equalsIgnoreCase("Inactivo"))
//            {
//                  dao.findItemEntities().remove(i);
//            
//            }
//            else
//            {    
//            listaItems[i][0] = dao.findItemEntities().get(i).getIdItem();
//            listaItems[i][1] = dao.findItemEntities().get(i).getNombre();
//            listaItems[i][2] = dao.findItemEntities().get(i).getPrecio();
//            listaItems[i][4] = dao.findItemEntities().get(i).getCategoria();
//            listaItems[i][3] = dao.findItemEntities().get(i).getDescripcion();
//            }
//        }
//        
//        String columna[] = new String[] {"ID", "Nombre", "Precio", "Categoria", "Descripcion"};
//        emf.close();
//        
//        DefaultTableModel modelo = new DefaultTableModel(listaItems, columna);
//        
//        ci.jtConsultarItem.setModel(modelo);
         
        jPanel2.removeAll();
        jPanel2.add(ci);
        jPanel2.revalidate();
        jPanel2.repaint();               
    }//GEN-LAST:event_jlConsultarItemMouseClicked

    private void jlEliminarItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlEliminarItemMouseClicked
        
        PanelEliminarItem Ei = new PanelEliminarItem();
        Ei.setSize(752,686);
        
//        ItemJpaController dao = new ItemJpaController(emf);
//        
//        List<Item> items = dao.findItemEntities();
//        
//        Object listaItems[][]  = new Object[dao.findItemEntities().size()][5];
//        for (int i = 0; i < dao.findItemEntities().size(); i++) {
//            
//            if(dao.findItemEntities().get(i).getEstado().equalsIgnoreCase("Inactivo"))
//            {
//                  dao.findItemEntities().remove(i);
//            
//            }
//            else
//            {    
//            listaItems[i][0] = dao.findItemEntities().get(i).getIdItem();
//            listaItems[i][1] = dao.findItemEntities().get(i).getNombre();
//            listaItems[i][2] = dao.findItemEntities().get(i).getPrecio();
//            listaItems[i][4] = dao.findItemEntities().get(i).getCategoria();
//            listaItems[i][3] = dao.findItemEntities().get(i).getDescripcion();
//            }
//        }
//        String columna[] = new String[] {"ID", "Nombre", "Precio", "Categoria", "Descripcion"};
//        emf.close();
//        
//        DefaultTableModel modelo = new DefaultTableModel(listaItems, columna);
        
//        Ei.jtEliminarItem.setModel(modelo);
        
        
        jPanel2.removeAll();
        jPanel2.add(Ei);
        jPanel2.revalidate();
        jPanel2.repaint();
    }//GEN-LAST:event_jlEliminarItemMouseClicked



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jlConsultarItem;
    private javax.swing.JLabel jlEliminarItem;
    private javax.swing.JLabel jlModificarItem;
    private javax.swing.JLabel jlRegistrarItem;
    // End of variables declaration//GEN-END:variables

    public LinkedList<Item> listaItems(){
        LinkedList<Item> listaItems = new LinkedList<>();
        ItemJpaController ijc = new ItemJpaController(emf);
        List<Item> lista = ijc.findItemEntities();
        
        for (Item item : lista) {
            if(item.getEstado().equals("Activo")){
                listaItems.add(item);
            }
        }
        return listaItems;
    }
    
}
